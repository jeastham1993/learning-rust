{
  "Comment": "A description of my state machine",
  "StartAt": "Validate",
  "States": {
    "Validate": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "${ValidateOrderFunctionArn}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "Price",
      "Catch": [
        {
          "ErrorEquals": [
            "&order_processing::shared::shared_data::InvalidOrder"
          ],
          "Next": "Validation Failure Queue",
          "ResultPath": "$.validation_error"
        }
      ]
    },
    "Validation Failure Queue": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sqs:sendMessage",
      "Parameters": {
        "MessageBody.$": "$",
        "QueueUrl": "${ValidationFailureQueueUrl}"
      },
      "End": true
    },
    "Price": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "InputPath": "$.data",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "${PriceOrderFunctionArn}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "Format for Dynamo"
    },
    "Format for Dynamo": {
      "Type": "Pass",
      "Next": "DynamoDB PutItem",
      "Parameters": {
        "PK.$": "$.data.order_number",
        "Data.$": "States.JsonToString($.data)"
      },
      "ResultPath": "$.formatted"
    },
    "DynamoDB PutItem": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:putItem",
      "Parameters": {
        "TableName": "${OrdersTable}",
        "Item": {
          "PK": {
            "S.$": "$.formatted.PK"
          },
          "Item": {
            "S.$": "$.formatted.Data"
          }
        }
      },
      "End": true
    }
  }
}